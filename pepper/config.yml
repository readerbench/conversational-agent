recipe: default.v1

# Configuration for Rasa NLU.
# https://rasa.com/docs/rasa/nlu/components/
language: ro

pipeline:
  - name: SpacyNLP
    # language model to load
    model: "ro"
    # when retrieving word vectors, this will decide if the casing
    # of the word is relevant. E.g. `hello` and `Hello` will
    # retrieve the same vector, if set to `False`. For some
    # applications and models it makes sense to differentiate
    # between these two words
    case_sensitive: False
  - name: SpacyTokenizer
  - name: SpacyFeaturizer
    # Specify what pooling operation should be used to calculate the vector of
    # the complete utterance. Available options: 'mean' and 'max'.
    "pooling": "mean"
  - name: RegexFeaturizer
  - name: LexicalSyntacticFeaturizer
  - name: CountVectorsFeaturizer
    analyzer: word
  - name: CountVectorsFeaturizer
    analyzer: char_wb
    min_ngram: 2
    max_ngram: 5
  - name: components.syntactic_parser.SyntacticParser
  - name: RegexEntityExtractor
  # Domain Classifier for detecting the microworld
  - name: components.domain_classifier.DomainClassifier
    epochs: 300
    entity_recognition: False
    number_of_transformer_layers: 3
  - name: components.syntactic_featurizer.SyntacticFeaturizer
    "features": [
      [ "syntactic_dep" ],
    ]
  # Classifier for detecting the microworld-specific intent and entities
  - name: components.microworld_classifier.MicroworldClassifier
    microworlds:
      generic:
        epochs: 300
      university_guide:
        epochs: 300
      mem_assistant:
        epochs: 300
        number_of_transformer_layers: 3
  - name: EntitySynonymMapper
  - name: ResponseSelector
    epochs: 100
  - name: FallbackClassifier
    threshold: 0.2
    ambiguity_threshold: 0.1

# Configuration for Rasa Core.
# https://rasa.com/docs/rasa/core/policies/
policies:
  - name: MemoizationPolicy
  - name: TEDPolicy
    max_history: 5
    epochs: 100
  - name: RulePolicy
    core_fallback_threshold: 0.3
    core_fallback_action_name: utter_unknown
